# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
set_msg_config -id {Common 17-41} -limit 10000000
create_project -in_memory -part xczu7ev-ffvc1156-2-e

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_msg_config -source 4 -id {IP_Flow 19-2162} -severity warning -new_severity info
set_property webtalk.parent_dir C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.cache/wt [current_project]
set_property parent.project_path C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.xpr [current_project]
set_property XPM_LIBRARIES XPM_CDC [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language VHDL [current_project]
set_property board_part xilinx.com:zcu104:part0:1.1 [current_project]
set_property ip_output_repo c:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_verilog -library xil_defaultlib {
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/Convolution.v
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/sum_conv_pipeline.v
}
read_vhdl -vhdl2008 -library xil_defaultlib {
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/log2_pkg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/log2_pkg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/function_pkg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/param_pkg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/LIF.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/LI_register.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/LUTRAM_exp.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/Sum.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/UART_RX_driver.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/adders_STDP.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/rl_pkg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/int_pkg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/bare_SNN.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/barrel_shifter.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/driven_uart.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/fifo.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/fixed_shifter.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/general_control.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/hidden_layer.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/input_layer.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/input_layer_control.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/input_neuron.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/input_neuron_core.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/inter_layer_reg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/interpolation.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/kernel_mult.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/layer_control.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/mod_m.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/network_control.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/one_neuron.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/output_layer.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/prev_spikes_reg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/spike_train.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/syn_mem_pkg.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/synaptic_mem.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/tau_counter.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/imports/new/top_rl_SNN.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/uart_rx.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/uart_tx.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/uart.vhd
  C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/new/top_SNN_uart.vhd
}
read_ip -quiet C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/ip/clk_wiz_0/clk_wiz_0.xci
set_property used_in_implementation false [get_files -all c:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/ip/clk_wiz_0/clk_wiz_0_board.xdc]
set_property used_in_implementation false [get_files -all c:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/ip/clk_wiz_0/clk_wiz_0.xdc]
set_property used_in_implementation false [get_files -all c:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/sources_1/ip/clk_wiz_0/clk_wiz_0_ooc.xdc]

# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/constrs_1/new/zcu104.xdc
set_property used_in_implementation false [get_files C:/Users/rafam/VivadoProjects/SNN_UART/SNN_UART.srcs/constrs_1/new/zcu104.xdc]

set_param ips.enableIPCacheLiteLoad 1
close [open __synthesis_is_running__ w]

synth_design -top top_SNN_uart -part xczu7ev-ffvc1156-2-e


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef top_SNN_uart.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file top_SNN_uart_utilization_synth.rpt -pb top_SNN_uart_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
